local languagues = {
  -- "ada",
  -- "agda",
  "angular",
  -- "apex",
  -- "arduino",
  -- "asm",
  "astro",
  -- "authzed",
  -- "awk",
  "bash",
  -- "bass",
  -- "beancount",
  -- "bibtex",
  -- "bicep",
  -- "bitbake",
  -- "blueprint",
  -- "bp",
  "c",
  -- "c_sharp",
  -- "cairo",
  -- "capnp",
  -- "chatito",
  -- "clojure",
  "cmake",
  "comment",
  "commonlisp",
  -- "cooklang",
  -- "corn",
  -- "cpon",
  "cpp",
  "css",
  "csv",
  -- "cuda",
  -- "cue",
  -- "d",
  -- "dart",
  "devicetree",
  -- "dhall",
  "diff",
  -- "disassembly",
  -- "djot",
  "dockerfile",
  "dot",
  -- "doxygen",
  -- "dtd",
  -- "earthfile",
  -- "ebnf",
  -- "eds",
  -- "eex",
  -- "elixir",
  "elm",
  -- "elsa",
  -- "elvish",
  "embedded_template",
  -- "erlang",
  -- "facility",
  -- "faust",
  -- "fennel",
  -- "fidl",
  -- "firrtl",
  -- "fish",
  -- "foam",
  -- "forth",
  -- "fortran",
  -- "fsh",
  -- "func",
  -- "fusion",
  "gdscript",
  "gdshader",
  "git_config",
  "git_rebase",
  "gitattributes",
  "gitcommit",
  "gitignore",
  -- "gleam",
  -- "glimmer",
  -- "glsl",
  -- "gn",
  "gnuplot",
  "go",
  "godot_resource",
  "gomod",
  "gosum",
  "gotmpl",
  "gowork",
  "gpg",
  "graphql",
  "groovy",
  -- "gstlaunch",
  -- "hack",
  -- "hare",
  "haskell",
  "haskell_persistent",
  "hcl",
  -- "heex",
  "helm",
  -- "hjson",
  -- "hlsl",
  -- "hlsplaylist",
  -- "hocon",
  -- "hoon",
  "html",
  -- "htmldjango",
  "http",
  -- "hurl",
  "hyprlang",
  "idl",
  "ini",
  -- "ispc",
  "java",
  "javascript",
  "jq",
  "jsdoc",
  "json",
  "json5",
  "jsonc",
  "jsonnet",
  -- "julia",
  "just",
  -- "kconfig",
  -- "kdl",
  "kotlin",
  -- "koto",
  -- "kusto",
  -- "lalrpop",
  -- "ledger",
  -- "leo",
  -- "linkerscript",
  "liquid",
  "liquidsoap",
  "llvm",
  "lua",
  "luadoc",
  "luap",
  "luau",
  -- "m68k",
  "make",
  "markdown",
  "markdown_inline",
  -- "matlab",
  -- "menhir",
  -- "mermaid",
  -- "meson",
  -- "muttrc",
  -- "nasm",
  -- "nickel",
  -- "nim",
  -- "nim_format_string",
  -- "ninja",
  "nix",
  "norg",
  -- "nqc",
  -- "objc",
  -- "objdump",
  -- "ocaml",
  -- "ocaml_interface",
  -- "odin",
  "org",
  -- "pascal",
  "passwd",
  "pem",
  -- "perl",
  -- "php",
  -- "php_only",
  -- "phpdoc",
  -- "pioasm",
  -- "po",
  -- "pod",
  -- "poe_filter",
  -- "pony",
  -- "printf",
  -- "prisma",
  "promql",
  "properties",
  -- "proto",
  -- "prql",
  -- "psv",
  -- "pug",
  -- "puppet",
  -- "purescript",
  "pymanifest",
  "python",
  -- "ql",
  -- "qmldir",
  -- "qmljs",
  "query",
  -- "r",
  -- "racket",
  -- "ralph",
  "rasi",
  -- "rbs",
  -- "re2c",
  -- "readline",
  "regex",
  -- "rego",
  "requirements",
  -- "rnoweb",
  -- "robot",
  -- "roc",
  -- "ron",
  -- "rst",
  -- "ruby",
  "rust",
  -- "scala",
  "scheme",
  "scss",
  "slang",
  "slint",
  -- "smali",
  -- "smithy",
  -- "snakemake",
  -- "solidity",
  -- "soql",
  -- "sosl",
  -- "sourcepawn",
  -- "sparql",
  "sql",
  -- "squirrel",
  "ssh_config",
  -- "starlark",
  -- "strace",
  "styled",
  -- "supercollider",
  -- "surface",
  "svelte",
  "sxhkdrc",
  -- "systemtap",
  -- "t32",
  -- "tablegen",
  -- "tact",
  "tcl",
  "templ",
  "terraform",
  "textproto",
  "thrift",
  "tiger",
  "tlaplus",
  "tmux",
  "todotxt",
  "toml",
  "tsv",
  "tsx",
  "turtle",
  "twig",
  "typescript",
  "typespec",
  "typoscript",
  "typst",
  "udev",
  -- "ungrammar",
  -- "usd",
  -- "uxntal",
  -- "v",
  -- "vala",
  -- "vento",
  -- "verilog",
  -- "vhs",
  "vim",
  "vimdoc",
  "vue",
  -- "wgsl",
  -- "wgsl_bevy",
  -- "wing",
  -- "wit",
  -- "xcompose",
  "xml",
  "yaml",
  -- "yang",
  -- "yuck",
  -- "zathurarc",
  -- "zig",
}


return {
  "nvim-treesitter/nvim-treesitter",
  event = "BufReadPre",
  config = function()
    require("plugins.treesitter")

    vim.cmd.highlight 'RainbowDelimiterPink guifg=Pink'
    vim.cmd.highlight 'RainbowDelimiterYellow guifg=Yellow'
    vim.cmd.highlight 'RainbowDelimiterOrange guifg=Orange'
    vim.cmd.highlight 'RainbowDelimiterGreen guifg=Green'
    vim.cmd.highlight 'RainbowDelimiterViolet guifg=Violet'
    vim.cmd.highlight 'RainbowDelimiterCyan guifg=Cyan'

    require 'nvim-treesitter.configs'.setup(
      {
        ensure_installed = languagues,
        highlight = {
          enable = true,
          additional_vim_regex_highlighting = false,
        },
        rainbow = {
          enable = true,
          extended_mode = true,
          colors = {
            "#cc241d",
            "#a89984",
            "#b16286",
            "#d79921",
            "#689d6a",
            "#d65d0e",
            "#458588",
          },
          termcolors = { "Red", "Green", "Yellow", "Blue", "Magenta", "Cyan", "White" }
        },
        textobjects = {
          select = {
            enable = true,
            lookahead = true,
            keymaps = {
              ["of"] = "@function.outer",
              ["if"] = "@function.inner",
              ["oc"] = "@conditional.outer",
              ["ic"] = "@conditional.inner",
              ["ol"] = "@loop.outer",
              ["il"] = "@loop.inner",
            },
          }
        },
        incremental_selection = {
          enable = true,
          keymaps = {
            scope_incremental = "is",
            init_selection = "gnn",
            node_incremental = "in",
            node_decremental = "im",
          }
        },
        autotag = {
          enable = true
        },
        matchup = {
          enable = true
        }
      }
    )
  end,
  dependencies = {
    {
      "hiphish/rainbow-delimiters.nvim",
      config = function()
        require('rainbow-delimiters.setup').setup {
          -- highlight = {
          --   'RainbowDelimiterPink',
          --   'RainbowDelimiterOrange',
          --   'RainbowDelimiterGreen',
          --   'RainbowDelimiterViolet',
          --   'RainbowDelimiterYellow',
          --   'RainbowDelimiterCyan',
          -- }
        }
      end
    },
    "JoosepAlviste/nvim-ts-context-commentstring",
    "nvim-treesitter/nvim-treesitter-textobjects",
    "RRethy/nvim-treesitter-textsubjects",
    "nvim-treesitter/nvim-treesitter-textobjects",
    "nvim-treesitter/nvim-treesitter-refactor",
    "nvim-treesitter/playground",
    "nvim-ts-context-commentstring",
    "windwp/nvim-ts-autotag", --> auto tag close
    "RRethy/nvim-treesitter-textsubjects",
    { "m-demare/hlargs.nvim", config = true },
  }
}
